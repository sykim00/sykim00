[ 02 ] DI(Dependency Injection) 개념 및 활용 
1. 스프링을 이용한 객체 생성과 조립 (스프링은 객체 생성과 조립을 하는 컨테이너라 볼 수 있다.)
2. 스프링 설정 파일의 이해 : 필드에 대한 setter 함수들이 있어서 property의 value값을 줄 수 있다.
3. 스프링 프로퍼티 설정 : 기초데이터, list 타입, 다른 빈 객체 참조 방법 등을  살펴본다.
4. 스프링 컨테이너의 이해
 - 스프링 컨테이너를 생성하고 컴포넌트를 사용한다.
5. 의존 관계
 - DI는 Dependency Injection의 약자로 우리말로 하면 '의존하는 객체를 주입하는 것' 입니다.
 - 의존 주입은 setter를 통한 주입과 생성자를 통한 주입이 있습니다.
 - xml 파일을 이용한 의존주입
 - java 파일을 이용한 의존주입
6. DI 사용에 따른 장점
 - 작은 규모의 프로젝트에서는 스프링의 DI 사용을 하는 것 보다 일반적인 방법을 사용하여 개발하는 것이 더욱 빠르지만, 
   규모가 어느 정도 커지고, 추후 유지보수 업무가 발생시에는 DI를 이용한 개발의 장점을 느낄 수 있습니다.
 