[ 12 ] 인터페이스
1. 인터페이스의 이해
  (1) 인터페이스란?
  ① 작업명세서(작업지시서) - "앞으로 이렇게 만들어요"라고 표현해 놓은 것
      - 실제 구현된 것이 전혀 없는 기본 설계도.
      - 객체를 생성할 수 없고, 클래스 작성에 도움을 줄 목적으로 사용된다
      - 미리 정해진 규칙에 맞게 구현하도록 표준을 제시하는 데 사용된다
      - 추상메서드와 상수 만을 멤버로 가질 수 있다.
  ② 다형성을 가능하게 한다(하나의 객체를 다양하게 많은 type으로 만들 수 있다).
  ③ 객체를 부속품화 -다양한 객체를 제품의 부속품처럼 개발자 마음대로 변경 할 수 있다.
2. 인터페이스의 문법
  ⑴ 'class'대신 'interface' 예약어를 사용한다는 점에서 클래스와 유사
  ⑵ 실제 구현된 기능 없이 추상메소드와 상수만이 존재
      public interface 인터페이스이름 {
      	public static final 타입 상수이름 = 값;
       	public abstract 메서드 이름(매개변수 목록); //구현된 메소드는 가질 수 없다
      }
      ☞모든 멤버변수는 public static final이어야하며 static final은 생략할 수 있다.' 모든 메서드는 public abstract 이어야 하며, abstract를 생략할 수 있다.
  ⑵ private는 불가 - 상수나 메소드를 만들 때 private 접근 제한자는 불가
  ⑶ 변수 타입 - 인터페이스는 객체를 생성할 수 없다. 다만, 변수 타입으로만 사용 됩니다.
      (예외, 익명 구현 객체만이 가능은 하다. 안드로이드에서 주로)
  ⑷ 구현은 Implement 되는 클래스에서 합니다.
3. 다형성이란?
   “여러 가지 형태를 가질 수 있는 능력”
   말 그대로 객체가 다양하게 변할 수 있다고 생각하면 됩니다 “one interface, multiple implementation”
   ※ (하나의 인터페이스를 사용하여 다양한 구현 방법을 제공, 하나의 클래스나 함수가 다양하게 동작하는 것.)
4. 인터페이스와 다중상속
   Java는 다중상속이 불가 합니다. 하지만 java에서도 interface를 통해서는 다중구현이 가능하여, 여러 가지 타입으로 객체를 선언할 수 있습니다. 
   정확하게 말하면 java는 다중상속이 아닌 ‘다형성(type이 다양하게 존재할 수 있다)’이 존재한다고 이해하셔야 합니다.
   인터페이스를 구현하는 것은 클래스를 상속받는 것과 비슷합니다. 다만, ‘extends’ 대신 ‘implements’를 사용합니다
  ⑴ 단일상속(O)
  ⑵ 다중상속(X)
  ⑶ 다중구현(O)
  ⑷ 인터페이스의 다중상속(O)
6. 인터페이스의 장점
  ⑴ 개발시간을 단축시킬 수 있다.
  ⑵ 표준화가 가능하다
  ⑶ 서로 관계없는 클래스들에게 관계를 맺어 줄 수 있다.
  ⑷ 독립적인 프로그래밍이 가능하다
7. 인터페이스와 추상클래스
  (공통점)
  ① 추상메소드를 가지고 있습니다 - 추상메소드를 가지고 있어 하위 클래스에서 구현해야 합니다.
  ② 변수 타입이 목적 입니다 - 객체생성이 목적이 아닌 변수 타입을 정의하는 것이 목적입니다.
  ③ 객체 생성이 불가합니다. anonymose(익명클래스)를 이용할 수 있다..
  (차이점)
  상속, 구현 - 추상메소드는 상속(extends)을 통한 사용이고, 인터페이스는 구현(implements)을 통한 사용
  구성요소 차이 - 추상클래스는 일반 클래스와 동일하게 변수, 메소드의 모든 기능을 사용할 수 있지만, 인터페이스는 상수와 추상메소드만이 존재 합니다.
  단일상속, 다중구현 - 추상클래스는 상속이므로 단일 상속만 지원하고, 인터페이스는 다중구현이 가능 합니다.