[ 11 ] 추상 클래스
(cf) 다형성(Polymorphism) : 같은 형태이지만 기능적으로 여러 다양한 객체를 이용할 수 있는 성질을 말한다.
     프로그래밍 입자에서 상속받는 여러 객체를 대입함으로 다양한 기능을 이용할 수 있다.
1. 추상 클래스의 이해
   - 추상적으로 정의할 테니(선언해 놓을 테니), 객체를 사용할 사용자가 꼭 재정의(overriding) 하세요!
2. 추상 클래스의 문법(※추상 메서드에서는 정의만 합니다. 구현하지 않습니다)
   ① abstract(추상 클래스 및 추상 메서드를 선언하는 예약어) 이용
       public abstract class ClassName {
        …
       }
   ② 추상 클래스에는 하나 이상의 추상 메서드가 포함. 추상메서드는 정의만 하고 구현은 하지 않습니다.
   ③ 추상 메서드에는 메서드의 선언 부만 있고 실행부(구현부, Body)는 없습니다.
       abstract 리턴타입 methodName([매개변수])
   ④ 추상 클래스에서는 메서드 선언만 하고 실제로 구현은 상속받는 클래스에서 한다.
       기능운 자식 클래스에게 위임 - 추상 클래스에서 정의된 추상적인 기능은 하위 클래스에서 상세 구현
   ⑤ 클래스의 프레임만 구성. 직접 객체 생성 불가능(abstract는 인스턴스화를 금지하는 키워드)
3. 추상 클래스가 필요한 이유
   ※ 강제성을 느낄 때 사용합니다.
4. 추상 클래스 상속과 일반적인 상속의 차이
   부모 클래스의 메서드를 자식 클래스에서 변경할 일이 없다면, 일반 클래스를 이용한 상속이 좋습니다.
   하지만, 자식 클래스에서 꼭 재정의 해야 하는 부분이 있다면, 추상 클래스를 이용하여 강제로 재정의 하게 해야 됩니다.
5. final(제한자)
   ⑴ 클래스 앞에 붙일 경우 : 상속 금지
       public final class Test {
       }
   ⑵ 멤버 메서드 앞에 붙일 경우 : 오버라이딩 금지
       public final void print(){
       }
   ⑶ 멤버 변수 앞에 붙일 경우 : 상수화된다.(변경 금지)
       public final int PORT_NUMBER = 80;